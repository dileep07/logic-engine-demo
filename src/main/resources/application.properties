spring.application.name=logicengine
server.port=8080
spring.datasource.url=jdbc:h2:mem:testdb
spring.datasource.driver-class-name=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
spring.jpa.hibernate.ddl-auto=none
otel.instrumentation.logback-mdc.enabled=true
spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.listener.missing-topics-fatal=false
spring.kafka.consumer.auto-offset-reset=latest
spring.kafka.consumer.properties.session.timeout.ms=15000
# Producer settings for JSON payloads
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
# Expose specific endpoints
management.endpoints.web.exposure.include=health,info,metrics,prometheus
# Show detailed health info
management.endpoint.health.show-details=always
# Enable Prometheus endpoint (if using micrometer)
management.metrics.export.prometheus.enabled=true
# Change default actuator base path (optional)
# management.endpoints.web.base-path=/manage
management.metrics.tags.application=${spring.application.name}
management.metrics.enable.kafka=true
# Set the OTLP endpoint (Tempo's default OTLP/gRPC port is 4317)
otel.traces.exporter=otlp
otel.exporter.otlp.endpoint=http://localhost:4318
otel.exporter.otlp.protocol=http

# Optional: set service name and resource attributes
otel.resource.attributes=service.name=logicengine,env=dev
otel.javaagent.debug=true