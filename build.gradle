plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.0'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.dil'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'io.opentelemetry:opentelemetry-api:1.50.0'
	implementation 'io.opentelemetry:opentelemetry-sdk:1.50.0'
	implementation 'io.opentelemetry:opentelemetry-exporter-logging:1.36.0'
	implementation 'org.springframework.kafka:spring-kafka'
	implementation 'com.fasterxml.jackson.core:jackson-databind'
	implementation 'org.apache.avro:avro:1.11.4'
	//implementation 'io.confluent:kafka-avro-serializer:7.5.0'
	implementation("io.opentelemetry.instrumentation:opentelemetry-logback-appender-1.0:2.16.0-alpha")
	implementation 'com.h2database:h2'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	implementation 'com.github.loki4j:loki-logback-appender:1.6.0'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'io.micrometer:micrometer-registry-prometheus'
	implementation 'io.opentelemetry:opentelemetry-exporter-otlp:1.51.0'
	implementation 'io.opentelemetry:opentelemetry-semconv:1.9.0-alpha'
	implementation 'io.opentelemetry:opentelemetry-sdk-extension-autoconfigure:1.51.0'


}

tasks.named('test') {
	useJUnitPlatform()
}
def otelAgentJar = file("$projectDir/src/main/resources/opentelemetry-javaagent.jar")
tasks.named('bootRun', org.springframework.boot.gradle.tasks.run.BootRun) {
	// add the â€“javaagent arg plus any OTel system properties you want
	jvmArgs = [
			"-javaagent:${otelAgentJar}",
			"-Dotel.service.name=logicengine",
			"-Dotel.traces.exporter=otlp",
			"-Dotel.exporter.otlp.endpoint=http://localhost:4318",
			"-Dotel.resource.attributes=env=dev",
			"-Dotel.metrics.exporter=none",
			"-Dotel.logs.exporter=none"
	]
}